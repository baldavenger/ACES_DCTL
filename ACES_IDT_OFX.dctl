// ACES 1.3 IDT OFX DCTL

DEFINE_UI_PARAMS(p_IDT, IDT, DCTLUI_COMBO_BOX, 0, { IDT_OFF, REC709IN, SRGBIN, ALEXALOGC, ALEXARAW, PANAV35, REDLOG3G10, CANONC100D55, CANONC100TNG, CANONC100MK2D55, CANONC100MK2TNG, CANONC300D55, CANONC300TNG, CANONC500D55, CANONC500TNG, CANONC500CINED55, CANONC500CINETNG,  CANONC500DCIP3D55, CANONC500DCIP3TNG, CANONC300MK2CLOGBT2020D55, CANONC300MK2CLOGBT2020TNG, CANONC300MK2CLOGCINED55, CANONC300MK2CLOGCINETNG, CANONC300MK2CLOG2BT2020D55, CANONC300MK2CLOG2BT2020TNG, CANONC300MK2CLOG2CINED55, CANONC300MK2CLOG2CINETNG, CANONC300MK2CLOG3BT2020D55, CANONC300MK2CLOG3BT2020TNG, CANONC300MK2CLOG3CINED55, CANONC300MK2CLOG3CINETNG, SLOG1SGAMUT, SLOG2SGAMUTD55, SLOG2SGAMUTTNG, SLOG3SGAMUT3, SLOG3SGAMUT3CINE, VENICESGAMUT3, VENICESGAMUT3CINE }, { off, rec709, srgb, arri logc, arri raw, panav35, red log3g10, canon c100 d55, canon c100 tng, canon c100mk2 d55, canon c100mk2 tng, canon c300 d55, canon c300 tng, canon c500 d55, canon c500 tng, canon c500 cine d55, canon c500 cine tng, canon c500 dcip3 d55, canon c500 dcip3 tng, c300mk2 clog bt2020 d55, c300mk2 clog bt2020 tng, c300mk2 clog cine d55, c300mk2 clog cine tng, c300mk2 clog2 bt2020 d55, c300mk2 clog2 bt2020 tng, c300mk2 clog2 cine d55, c300mk2 clog2 cine tng, c300mk2 clog3 bt2020 d55, c300mk2 clog3 bt2020 tng, c300mk2 clog3 cine d55, c300mk2 clog3 cine tng, slog1 sgamut, slog2 sgamut d55, slog2 sgamut tng, slog3 sgamut3, slog3 sgamut3cine, venice sgamut3, venice sgamut3cine })

#include "ACES_LIB.h"

__DEVICE__ float3 transform(int p_Width, int p_Height, int p_X, int p_Y, float p_R, float p_G, float p_B)
{
float3 aces = make_float3(p_R, p_G, p_B);

switch (p_IDT){
case IDT_OFF:
{}
break;
case REC709IN:
{aces = IDT_Rec709(aces);}
break;
case SRGBIN:
{aces = IDT_sRGB(aces);}
break;
case ALEXALOGC:
aces = IDT_Alexa_v3_logC_EI800(aces);
break;
case ALEXARAW:
aces = IDT_Alexa_v3_raw_EI800_CCT6500(aces);
break;
case PANAV35:
{aces = IDT_Panasonic_V35(aces);}
break;
case REDLOG3G10:
aces = IDT_REDWideGamutRGB_Log3G10(aces);
break;
case CANONC100D55:
{aces = IDT_Canon_C100_A_D55(aces);}
break;
case CANONC100TNG:
{aces = IDT_Canon_C100_A_Tng(aces);}
break;
case CANONC100MK2D55:
{aces = IDT_Canon_C100mk2_A_D55(aces);}
break;
case CANONC100MK2TNG:
{aces = IDT_Canon_C100mk2_A_Tng(aces);}
break;
case CANONC300D55:
{aces = IDT_Canon_C300_A_D55(aces);}
break;
case CANONC300TNG:
{aces = IDT_Canon_C300_A_Tng(aces);}
break;
case CANONC500D55:
{aces = IDT_Canon_C500_A_D55(aces);}
break;
case CANONC500TNG:
{aces = IDT_Canon_C500_A_Tng(aces);}
break;
case CANONC500CINED55:
{aces = IDT_Canon_C500_CinemaGamut_A_D55(aces);}
break;
case CANONC500CINETNG:
{aces = IDT_Canon_C500_CinemaGamut_A_Tng(aces);}
break;
case CANONC500DCIP3D55:
{aces = IDT_Canon_C500_DCI_P3_A_D55(aces);}
break;
case CANONC500DCIP3TNG:
{aces = IDT_Canon_C500_DCI_P3_A_Tng(aces);}
break;
case CANONC300MK2CLOGBT2020D55:
{aces = IDT_Canon_C300mk2_CanonLog_BT2020_D_D55(aces);}
break;
case CANONC300MK2CLOGBT2020TNG:
{aces = IDT_Canon_C300mk2_CanonLog_BT2020_D_Tng(aces);}
break;
case CANONC300MK2CLOGCINED55:
{aces = IDT_Canon_C300mk2_CanonLog_CinemaGamut_C_D55(aces);}
break;
case CANONC300MK2CLOGCINETNG:
{aces = IDT_Canon_C300mk2_CanonLog_CinemaGamut_C_Tng(aces);}
break;
case CANONC300MK2CLOG2BT2020D55:
{aces = IDT_Canon_C300mk2_CanonLog2_BT2020_B_D55(aces);}
break;
case CANONC300MK2CLOG2BT2020TNG:
{aces = IDT_Canon_C300mk2_CanonLog2_BT2020_B_Tng(aces);}
break;
case CANONC300MK2CLOG2CINED55:
{aces = IDT_Canon_C300mk2_CanonLog2_CinemaGamut_A_D55(aces);}
break;
case CANONC300MK2CLOG2CINETNG:
{aces = IDT_Canon_C300mk2_CanonLog2_CinemaGamut_A_Tng(aces);}
break;
case CANONC300MK2CLOG3BT2020D55:
{aces = IDT_Canon_C300mk2_CanonLog3_BT2020_F_D55(aces);}
break;
case CANONC300MK2CLOG3BT2020TNG:
{aces = IDT_Canon_C300mk2_CanonLog3_BT2020_F_Tng(aces);}
break;
case CANONC300MK2CLOG3CINED55:
{aces = IDT_Canon_C300mk2_CanonLog3_CinemaGamut_E_D55(aces);}
break;
case CANONC300MK2CLOG3CINETNG:
{aces = IDT_Canon_C300mk2_CanonLog3_CinemaGamut_E_Tng(aces);}
break;
case SLOG1SGAMUT:
{aces = IDT_Sony_SLog1_SGamut(aces);}
break;
case SLOG2SGAMUTD55:
{aces = IDT_Sony_SLog2_SGamut_Daylight(aces);}
break;
case SLOG2SGAMUTTNG:
{aces = IDT_Sony_SLog2_SGamut_Tungsten(aces);}
break;
case SLOG3SGAMUT3:
{aces = IDT_Sony_SLog3_SGamut3(aces);}
break;
case SLOG3SGAMUT3CINE:
{aces = IDT_Sony_SLog3_SGamut3Cine(aces);}
break;
case VENICESGAMUT3:
{aces = IDT_Sony_Venice_SGamut3(aces);}
break;
case VENICESGAMUT3CINE:
{aces = IDT_Sony_Venice_SGamut3Cine(aces);}}

return aces;
}